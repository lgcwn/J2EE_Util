package com.up72.hq.utils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 *
 * code 加密
 *
 *
 */
public class CodeEncryption {

    private static Map<Integer,Map<Integer,String>> stock=new HashMap<Integer,Map<Integer,String>>();

    private static String [] key={"q","w","e","r","t","y","u","i","o","p","a","s","d","f","g","h","j","k","l","z","x","c","v","b","n","m","Q","W","E","R","T","Y","U","I","o","A","S","D","F","G","H","J","K","L","Z","X","C","V","B","N","M"};


    public static String ciphertext(Long express){

        Long l=10422l;
        System.out.println("明文:"+l);
        String encryption=encryption(l);
        System.out.println("密文:"+encryption);
        encryption="FpyFFpyFDuSgoS45";
        Long expressS=express(encryption);
        System.out.println("明文:"+expressS);

        return null;
    }

    /**
     * 加密
     * @param express
     * @return 密文
     */
    public static String encryption(Long express){
         init();

        int ran=(int)(Math.random()*99);

        if(ran<=9)
            ran+=10;

        String ranResult=ran*express+"";

        Map<Integer,String> map=stock.get(ran);

        StringBuffer sb=new StringBuffer();

        for(int i=0;i<ranResult.length();i++){
            Integer j=Integer.parseInt(ranResult.substring(i,i+1));
            sb.append(map.get(j));
        }

        return sb.toString()+ran;
    }

    /**
     * 解密
     * @param encryption
     * @return id
     */
    public static Long express(String encryption){

        try{
            init();

            List<String> code=new ArrayList<String>();
            int size=encryption.length();
            for(int i=0;i<size;i++){
                if((i+1)%2==0){
                    code.add(encryption.substring(i-1,i)+encryption.substring(i,i+1));
                }
            }

            Integer model=Integer.parseInt(encryption.substring(size-2));

            Map<Integer,String> map=stock.get(model);

            StringBuffer sb=new StringBuffer();
            int count=0;
            for(String val:code){
                for(Integer key:map.keySet()){
                    if(map.get(key).equals(val)){
                        sb.append(key);
                        count++;
                    }
                }
            }
            Long result=Long.parseLong(sb.toString());
            int exCount=(result+"").length();
            if(result < model){
                return null;
            }else{
                return result/model;
            }

        }catch (Exception e){
            return null;
        }



    }

    private static String getKey(){
        StringBuffer sb=new StringBuffer();
        int length=2;
        for(int i=0;i<length;i++){
            sb.append(key[(int)(Math.random()*key.length)]);
        }
        return sb.toString() ;
    }







    public static void main(String args[]){
        ciphertext(1l);
    }


    private static Map<Integer,String> map0=new HashMap<Integer,String>();
    private static Map<Integer,String> map1=new HashMap<Integer,String>();
    private static Map<Integer,String> map2=new HashMap<Integer,String>();
    private static Map<Integer,String> map3=new HashMap<Integer,String>();
    private static Map<Integer,String> map4=new HashMap<Integer,String>();
    private static Map<Integer,String> map5=new HashMap<Integer,String>();
    private static Map<Integer,String> map6=new HashMap<Integer,String>();
    private static Map<Integer,String> map7=new HashMap<Integer,String>();
    private static Map<Integer,String> map8=new HashMap<Integer,String>();
    private static Map<Integer,String> map9=new HashMap<Integer,String>();
    private static Map<Integer,String> map10=new HashMap<Integer,String>();
    private static Map<Integer,String> map11=new HashMap<Integer,String>();
    private static Map<Integer,String> map12=new HashMap<Integer,String>();
    private static Map<Integer,String> map13=new HashMap<Integer,String>();
    private static Map<Integer,String> map14=new HashMap<Integer,String>();
    private static Map<Integer,String> map15=new HashMap<Integer,String>();
    private static Map<Integer,String> map16=new HashMap<Integer,String>();
    private static Map<Integer,String> map17=new HashMap<Integer,String>();
    private static Map<Integer,String> map18=new HashMap<Integer,String>();
    private static Map<Integer,String> map19=new HashMap<Integer,String>();
    private static Map<Integer,String> map20=new HashMap<Integer,String>();
    private static Map<Integer,String> map21=new HashMap<Integer,String>();
    private static Map<Integer,String> map22=new HashMap<Integer,String>();
    private static Map<Integer,String> map23=new HashMap<Integer,String>();
    private static Map<Integer,String> map24=new HashMap<Integer,String>();
    private static Map<Integer,String> map25=new HashMap<Integer,String>();
    private static Map<Integer,String> map26=new HashMap<Integer,String>();
    private static Map<Integer,String> map27=new HashMap<Integer,String>();
    private static Map<Integer,String> map28=new HashMap<Integer,String>();
    private static Map<Integer,String> map29=new HashMap<Integer,String>();
    private static Map<Integer,String> map30=new HashMap<Integer,String>();
    private static Map<Integer,String> map31=new HashMap<Integer,String>();
    private static Map<Integer,String> map32=new HashMap<Integer,String>();
    private static Map<Integer,String> map33=new HashMap<Integer,String>();
    private static Map<Integer,String> map34=new HashMap<Integer,String>();
    private static Map<Integer,String> map35=new HashMap<Integer,String>();
    private static Map<Integer,String> map36=new HashMap<Integer,String>();
    private static Map<Integer,String> map37=new HashMap<Integer,String>();
    private static Map<Integer,String> map38=new HashMap<Integer,String>();
    private static Map<Integer,String> map39=new HashMap<Integer,String>();
    private static Map<Integer,String> map40=new HashMap<Integer,String>();
    private static Map<Integer,String> map41=new HashMap<Integer,String>();
    private static Map<Integer,String> map42=new HashMap<Integer,String>();
    private static Map<Integer,String> map43=new HashMap<Integer,String>();
    private static Map<Integer,String> map44=new HashMap<Integer,String>();
    private static Map<Integer,String> map45=new HashMap<Integer,String>();
    private static Map<Integer,String> map46=new HashMap<Integer,String>();
    private static Map<Integer,String> map47=new HashMap<Integer,String>();
    private static Map<Integer,String> map48=new HashMap<Integer,String>();
    private static Map<Integer,String> map49=new HashMap<Integer,String>();
    private static Map<Integer,String> map50=new HashMap<Integer,String>();
    private static Map<Integer,String> map51=new HashMap<Integer,String>();
    private static Map<Integer,String> map52=new HashMap<Integer,String>();
    private static Map<Integer,String> map53=new HashMap<Integer,String>();
    private static Map<Integer,String> map54=new HashMap<Integer,String>();
    private static Map<Integer,String> map55=new HashMap<Integer,String>();
    private static Map<Integer,String> map56=new HashMap<Integer,String>();
    private static Map<Integer,String> map57=new HashMap<Integer,String>();
    private static Map<Integer,String> map58=new HashMap<Integer,String>();
    private static Map<Integer,String> map59=new HashMap<Integer,String>();
    private static Map<Integer,String> map60=new HashMap<Integer,String>();
    private static Map<Integer,String> map61=new HashMap<Integer,String>();
    private static Map<Integer,String> map62=new HashMap<Integer,String>();
    private static Map<Integer,String> map63=new HashMap<Integer,String>();
    private static Map<Integer,String> map64=new HashMap<Integer,String>();
    private static Map<Integer,String> map65=new HashMap<Integer,String>();
    private static Map<Integer,String> map66=new HashMap<Integer,String>();
    private static Map<Integer,String> map67=new HashMap<Integer,String>();
    private static Map<Integer,String> map68=new HashMap<Integer,String>();
    private static Map<Integer,String> map69=new HashMap<Integer,String>();
    private static Map<Integer,String> map70=new HashMap<Integer,String>();
    private static Map<Integer,String> map71=new HashMap<Integer,String>();
    private static Map<Integer,String> map72=new HashMap<Integer,String>();
    private static Map<Integer,String> map73=new HashMap<Integer,String>();
    private static Map<Integer,String> map74=new HashMap<Integer,String>();
    private static Map<Integer,String> map75=new HashMap<Integer,String>();
    private static Map<Integer,String> map76=new HashMap<Integer,String>();
    private static Map<Integer,String> map77=new HashMap<Integer,String>();
    private static Map<Integer,String> map78=new HashMap<Integer,String>();
    private static Map<Integer,String> map79=new HashMap<Integer,String>();
    private static Map<Integer,String> map80=new HashMap<Integer,String>();
    private static Map<Integer,String> map81=new HashMap<Integer,String>();
    private static Map<Integer,String> map82=new HashMap<Integer,String>();
    private static Map<Integer,String> map83=new HashMap<Integer,String>();
    private static Map<Integer,String> map84=new HashMap<Integer,String>();
    private static Map<Integer,String> map85=new HashMap<Integer,String>();
    private static Map<Integer,String> map86=new HashMap<Integer,String>();
    private static Map<Integer,String> map87=new HashMap<Integer,String>();
    private static Map<Integer,String> map88=new HashMap<Integer,String>();
    private static Map<Integer,String> map89=new HashMap<Integer,String>();
    private static Map<Integer,String> map90=new HashMap<Integer,String>();
    private static Map<Integer,String> map91=new HashMap<Integer,String>();
    private static Map<Integer,String> map92=new HashMap<Integer,String>();
    private static Map<Integer,String> map93=new HashMap<Integer,String>();
    private static Map<Integer,String> map94=new HashMap<Integer,String>();
    private static Map<Integer,String> map95=new HashMap<Integer,String>();
    private static Map<Integer,String> map96=new HashMap<Integer,String>();
    private static Map<Integer,String> map97=new HashMap<Integer,String>();
    private static Map<Integer,String> map98=new HashMap<Integer,String>();
    private static Map<Integer,String> map99=new HashMap<Integer,String>();

   private static void init(){
       map0.put(0,"im");
       map0.put(1,"aN");
       map0.put(2,"Ka");
       map0.put(3,"nN");
       map0.put(4,"La");
       map0.put(5,"fC");
       map0.put(6,"hn");
       map0.put(7,"zW");
       map0.put(8,"Qm");
       map0.put(9,"ye");
       map1.put(0,"WU");
       map1.put(1,"VI");
       map1.put(2,"xh");
       map1.put(3,"VS");
       map1.put(4,"di");
       map1.put(5,"Rp");
       map1.put(6,"Lg");
       map1.put(7,"qn");
       map1.put(8,"Lp");
       map1.put(9,"Tu");
       map2.put(0,"dk");
       map2.put(1,"FH");
       map2.put(2,"fB");
       map2.put(3,"Zd");
       map2.put(4,"qU");
       map2.put(5,"yV");
       map2.put(6,"iZ");
       map2.put(7,"Ro");
       map2.put(8,"HE");
       map2.put(9,"gu");
       map3.put(0,"mp");
       map3.put(1,"of");
       map3.put(2,"Rv");
       map3.put(3,"sZ");
       map3.put(4,"AN");
       map3.put(5,"TH");
       map3.put(6,"Np");
       map3.put(7,"gB");
       map3.put(8,"jA");
       map3.put(9,"uK");
       map4.put(0,"aK");
       map4.put(1,"Ls");
       map4.put(2,"mo");
       map4.put(3,"BR");
       map4.put(4,"SK");
       map4.put(5,"sX");
       map4.put(6,"ve");
       map4.put(7,"cZ");
       map4.put(8,"Mc");
       map4.put(9,"Uz");
       map5.put(0,"lh");
       map5.put(1,"HW");
       map5.put(2,"sL");
       map5.put(3,"nX");
       map5.put(4,"fj");
       map5.put(5,"Ev");
       map5.put(6,"wU");
       map5.put(7,"eD");
       map5.put(8,"rn");
       map5.put(9,"wt");
       map6.put(0,"iW");
       map6.put(1,"iY");
       map6.put(2,"Cl");
       map6.put(3,"TU");
       map6.put(4,"Mr");
       map6.put(5,"GI");
       map6.put(6,"LC");
       map6.put(7,"Sb");
       map6.put(8,"zs");
       map6.put(9,"QF");
       map7.put(0,"lQ");
       map7.put(1,"Ae");
       map7.put(2,"Gs");
       map7.put(3,"aI");
       map7.put(4,"eZ");
       map7.put(5,"Nk");
       map7.put(6,"ei");
       map7.put(7,"sF");
       map7.put(8,"WJ");
       map7.put(9,"sd");
       map8.put(0,"kM");
       map8.put(1,"Qx");
       map8.put(2,"XQ");
       map8.put(3,"zH");
       map8.put(4,"Xh");
       map8.put(5,"MQ");
       map8.put(6,"lF");
       map8.put(7,"KK");
       map8.put(8,"cR");
       map8.put(9,"NU");
       map9.put(0,"SN");
       map9.put(1,"wq");
       map9.put(2,"Xq");
       map9.put(3,"Mn");
       map9.put(4,"Ec");
       map9.put(5,"gm");
       map9.put(6,"Rh");
       map9.put(7,"Zr");
       map9.put(8,"qX");
       map9.put(9,"Jc");
       map10.put(0,"nT");
       map10.put(1,"wo");
       map10.put(2,"Zd");
       map10.put(3,"Lo");
       map10.put(4,"rS");
       map10.put(5,"Wa");
       map10.put(6,"os");
       map10.put(7,"UQ");
       map10.put(8,"RW");
       map10.put(9,"re");
       map11.put(0,"Ay");
       map11.put(1,"Ff");
       map11.put(2,"yY");
       map11.put(3,"yN");
       map11.put(4,"Lo");
       map11.put(5,"DN");
       map11.put(6,"IN");
       map11.put(7,"Gw");
       map11.put(8,"er");
       map11.put(9,"pL");
       map12.put(0,"Hz");
       map12.put(1,"km");
       map12.put(2,"ax");
       map12.put(3,"Ko");
       map12.put(4,"xE");
       map12.put(5,"fo");
       map12.put(6,"xb");
       map12.put(7,"pN");
       map12.put(8,"Ya");
       map12.put(9,"yW");
       map13.put(0,"oE");
       map13.put(1,"TB");
       map13.put(2,"ko");
       map13.put(3,"NX");
       map13.put(4,"lY");
       map13.put(5,"ae");
       map13.put(6,"RF");
       map13.put(7,"ry");
       map13.put(8,"QZ");
       map13.put(9,"JW");
       map14.put(0,"xw");
       map14.put(1,"FD");
       map14.put(2,"cL");
       map14.put(3,"Ip");
       map14.put(4,"Fm");
       map14.put(5,"VH");
       map14.put(6,"ii");
       map14.put(7,"Lu");
       map14.put(8,"VR");
       map14.put(9,"Ch");
       map15.put(0,"of");
       map15.put(1,"Jo");
       map15.put(2,"UI");
       map15.put(3,"Zd");
       map15.put(4,"wB");
       map15.put(5,"Zl");
       map15.put(6,"qZ");
       map15.put(7,"oL");
       map15.put(8,"cI");
       map15.put(9,"qm");
       map16.put(0,"XF");
       map16.put(1,"If");
       map16.put(2,"vq");
       map16.put(3,"zl");
       map16.put(4,"hA");
       map16.put(5,"WA");
       map16.put(6,"Fj");
       map16.put(7,"uk");
       map16.put(8,"ZH");
       map16.put(9,"Jp");
       map17.put(0,"SJ");
       map17.put(1,"nN");
       map17.put(2,"Jo");
       map17.put(3,"Ve");
       map17.put(4,"rX");
       map17.put(5,"sA");
       map17.put(6,"vw");
       map17.put(7,"mX");
       map17.put(8,"mT");
       map17.put(9,"kz");
       map18.put(0,"bM");
       map18.put(1,"CH");
       map18.put(2,"Ao");
       map18.put(3,"IW");
       map18.put(4,"Al");
       map18.put(5,"WC");
       map18.put(6,"ll");
       map18.put(7,"Yz");
       map18.put(8,"Tn");
       map18.put(9,"iA");
       map19.put(0,"oV");
       map19.put(1,"or");
       map19.put(2,"ez");
       map19.put(3,"tz");
       map19.put(4,"Wl");
       map19.put(5,"qu");
       map19.put(6,"il");
       map19.put(7,"KR");
       map19.put(8,"XD");
       map19.put(9,"EJ");
       map20.put(0,"MV");
       map20.put(1,"zq");
       map20.put(2,"LW");
       map20.put(3,"WW");
       map20.put(4,"GR");
       map20.put(5,"MH");
       map20.put(6,"sI");
       map20.put(7,"ct");
       map20.put(8,"xz");
       map20.put(9,"oG");
       map21.put(0,"CR");
       map21.put(1,"dy");
       map21.put(2,"GC");
       map21.put(3,"SG");
       map21.put(4,"yy");
       map21.put(5,"sJ");
       map21.put(6,"cv");
       map21.put(7,"xZ");
       map21.put(8,"mG");
       map21.put(9,"mc");
       map22.put(0,"Lj");
       map22.put(1,"AC");
       map22.put(2,"yU");
       map22.put(3,"Tj");
       map22.put(4,"MS");
       map22.put(5,"ko");
       map22.put(6,"ym");
       map22.put(7,"Ft");
       map22.put(8,"on");
       map22.put(9,"Gz");
       map23.put(0,"LW");
       map23.put(1,"eB");
       map23.put(2,"XU");
       map23.put(3,"Mw");
       map23.put(4,"HS");
       map23.put(5,"Cl");
       map23.put(6,"kF");
       map23.put(7,"Kc");
       map23.put(8,"rG");
       map23.put(9,"ob");
       map24.put(0,"lf");
       map24.put(1,"oS");
       map24.put(2,"rS");
       map24.put(3,"qt");
       map24.put(4,"Wc");
       map24.put(5,"nm");
       map24.put(6,"VE");
       map24.put(7,"mu");
       map24.put(8,"lW");
       map24.put(9,"WV");
       map25.put(0,"dd");
       map25.put(1,"FE");
       map25.put(2,"FQ");
       map25.put(3,"kB");
       map25.put(4,"Mu");
       map25.put(5,"DH");
       map25.put(6,"za");
       map25.put(7,"Er");
       map25.put(8,"AD");
       map25.put(9,"pQ");
       map26.put(0,"rU");
       map26.put(1,"rn");
       map26.put(2,"xc");
       map26.put(3,"QI");
       map26.put(4,"Kk");
       map26.put(5,"lD");
       map26.put(6,"UF");
       map26.put(7,"aw");
       map26.put(8,"qW");
       map26.put(9,"Jo");
       map27.put(0,"KK");
       map27.put(1,"LH");
       map27.put(2,"NW");
       map27.put(3,"kF");
       map27.put(4,"SZ");
       map27.put(5,"xo");
       map27.put(6,"qG");
       map27.put(7,"Tf");
       map27.put(8,"RG");
       map27.put(9,"CT");
       map28.put(0,"RQ");
       map28.put(1,"NE");
       map28.put(2,"kW");
       map28.put(3,"bm");
       map28.put(4,"BX");
       map28.put(5,"wI");
       map28.put(6,"lQ");
       map28.put(7,"lM");
       map28.put(8,"VF");
       map28.put(9,"te");
       map29.put(0,"Iz");
       map29.put(1,"pl");
       map29.put(2,"fL");
       map29.put(3,"qB");
       map29.put(4,"cI");
       map29.put(5,"jg");
       map29.put(6,"Du");
       map29.put(7,"QK");
       map29.put(8,"uT");
       map29.put(9,"ZZ");
       map30.put(0,"pB");
       map30.put(1,"Sd");
       map30.put(2,"oZ");
       map30.put(3,"pu");
       map30.put(4,"iJ");
       map30.put(5,"aB");
       map30.put(6,"iG");
       map30.put(7,"hC");
       map30.put(8,"vV");
       map30.put(9,"Eo");
       map31.put(0,"pQ");
       map31.put(1,"oN");
       map31.put(2,"Mj");
       map31.put(3,"WN");
       map31.put(4,"CI");
       map31.put(5,"jA");
       map31.put(6,"oF");
       map31.put(7,"Ec");
       map31.put(8,"Lj");
       map31.put(9,"TE");
       map32.put(0,"Cx");
       map32.put(1,"hE");
       map32.put(2,"nn");
       map32.put(3,"Sk");
       map32.put(4,"cd");
       map32.put(5,"bo");
       map32.put(6,"sK");
       map32.put(7,"wB");
       map32.put(8,"Il");
       map32.put(9,"Lk");
       map33.put(0,"rg");
       map33.put(1,"Ze");
       map33.put(2,"WA");
       map33.put(3,"Qw");
       map33.put(4,"Ea");
       map33.put(5,"yG");
       map33.put(6,"Ef");
       map33.put(7,"Gm");
       map33.put(8,"vo");
       map33.put(9,"GF");
       map34.put(0,"vj");
       map34.put(1,"KS");
       map34.put(2,"uU");
       map34.put(3,"oD");
       map34.put(4,"Zb");
       map34.put(5,"Kl");
       map34.put(6,"GW");
       map34.put(7,"YQ");
       map34.put(8,"Ic");
       map34.put(9,"lk");
       map35.put(0,"ow");
       map35.put(1,"Av");
       map35.put(2,"vq");
       map35.put(3,"RJ");
       map35.put(4,"hc");
       map35.put(5,"Ki");
       map35.put(6,"ao");
       map35.put(7,"FE");
       map35.put(8,"rm");
       map35.put(9,"zT");
       map36.put(0,"pl");
       map36.put(1,"XZ");
       map36.put(2,"oY");
       map36.put(3,"GI");
       map36.put(4,"vB");
       map36.put(5,"ci");
       map36.put(6,"GM");
       map36.put(7,"az");
       map36.put(8,"Br");
       map36.put(9,"vX");
       map37.put(0,"tq");
       map37.put(1,"Lp");
       map37.put(2,"cc");
       map37.put(3,"GB");
       map37.put(4,"zS");
       map37.put(5,"Mh");
       map37.put(6,"sD");
       map37.put(7,"yB");
       map37.put(8,"XH");
       map37.put(9,"uc");
       map38.put(0,"me");
       map38.put(1,"Yl");
       map38.put(2,"BK");
       map38.put(3,"wt");
       map38.put(4,"qZ");
       map38.put(5,"yX");
       map38.put(6,"sY");
       map38.put(7,"WE");
       map38.put(8,"zx");
       map38.put(9,"WU");
       map39.put(0,"mF");
       map39.put(1,"ai");
       map39.put(2,"Hy");
       map39.put(3,"gU");
       map39.put(4,"eJ");
       map39.put(5,"Rq");
       map39.put(6,"lC");
       map39.put(7,"DI");
       map39.put(8,"aZ");
       map39.put(9,"ya");
       map40.put(0,"Yf");
       map40.put(1,"Ny");
       map40.put(2,"ay");
       map40.put(3,"nj");
       map40.put(4,"qc");
       map40.put(5,"US");
       map40.put(6,"VL");
       map40.put(7,"Ap");
       map40.put(8,"uZ");
       map40.put(9,"yd");
       map41.put(0,"Kd");
       map41.put(1,"ww");
       map41.put(2,"ut");
       map41.put(3,"Nn");
       map41.put(4,"sg");
       map41.put(5,"qW");
       map41.put(6,"Kl");
       map41.put(7,"CC");
       map41.put(8,"Gp");
       map41.put(9,"AI");
       map42.put(0,"eF");
       map42.put(1,"Hd");
       map42.put(2,"Fq");
       map42.put(3,"jD");
       map42.put(4,"jF");
       map42.put(5,"OA");
       map42.put(6,"Wd");
       map42.put(7,"Eo");
       map42.put(8,"fW");
       map42.put(9,"Sd");
       map43.put(0,"jA");
       map43.put(1,"cu");
       map43.put(2,"Hg");
       map43.put(3,"kA");
       map43.put(4,"rF");
       map43.put(5,"cS");
       map43.put(6,"vV");
       map43.put(7,"gi");
       map43.put(8,"uo");
       map43.put(9,"gu");
       map44.put(0,"ss");
       map44.put(1,"yp");
       map44.put(2,"tY");
       map44.put(3,"Fc");
       map44.put(4,"Iu");
       map44.put(5,"WL");
       map44.put(6,"DV");
       map44.put(7,"ZY");
       map44.put(8,"sY");
       map44.put(9,"Ip");
       map45.put(0,"gQ");
       map45.put(1,"NC");
       map45.put(2,"uF");
       map45.put(3,"Ts");
       map45.put(4,"aE");
       map45.put(5,"xF");
       map45.put(6,"kb");
       map45.put(7,"Uy");
       map45.put(8,"uN");
       map45.put(9,"jS");
       map46.put(0,"qi");
       map46.put(1,"Wj");
       map46.put(2,"wu");
       map46.put(3,"TV");
       map46.put(4,"MI");
       map46.put(5,"Aq");
       map46.put(6,"vX");
       map46.put(7,"oj");
       map46.put(8,"VT");
       map46.put(9,"gQ");
       map47.put(0,"aQ");
       map47.put(1,"Yf");
       map47.put(2,"yl");
       map47.put(3,"As");
       map47.put(4,"Qd");
       map47.put(5,"Mp");
       map47.put(6,"kz");
       map47.put(7,"HV");
       map47.put(8,"VB");
       map47.put(9,"Ft");
       map48.put(0,"rs");
       map48.put(1,"Ux");
       map48.put(2,"ke");
       map48.put(3,"Ol");
       map48.put(4,"GL");
       map48.put(5,"oN");
       map48.put(6,"Ff");
       map48.put(7,"Cy");
       map48.put(8,"QV");
       map48.put(9,"Ww");
       map49.put(0,"Vb");
       map49.put(1,"TH");
       map49.put(2,"Kt");
       map49.put(3,"as");
       map49.put(4,"og");
       map49.put(5,"Zx");
       map49.put(6,"EY");
       map49.put(7,"ik");
       map49.put(8,"qj");
       map49.put(9,"ZJ");
       map50.put(0,"uG");
       map50.put(1,"Ss");
       map50.put(2,"Ep");
       map50.put(3,"ff");
       map50.put(4,"AH");
       map50.put(5,"GQ");
       map50.put(6,"Jo");
       map50.put(7,"mR");
       map50.put(8,"Vm");
       map50.put(9,"bo");
       map51.put(0,"KZ");
       map51.put(1,"nJ");
       map51.put(2,"pJ");
       map51.put(3,"US");
       map51.put(4,"yJ");
       map51.put(5,"DL");
       map51.put(6,"Db");
       map51.put(7,"AS");
       map51.put(8,"aa");
       map51.put(9,"eh");
       map52.put(0,"yt");
       map52.put(1,"mN");
       map52.put(2,"Qf");
       map52.put(3,"ok");
       map52.put(4,"Ic");
       map52.put(5,"zj");
       map52.put(6,"Hn");
       map52.put(7,"um");
       map52.put(8,"CZ");
       map52.put(9,"Lq");
       map53.put(0,"Jg");
       map53.put(1,"pI");
       map53.put(2,"Qi");
       map53.put(3,"te");
       map53.put(4,"gQ");
       map53.put(5,"mW");
       map53.put(6,"IW");
       map53.put(7,"zo");
       map53.put(8,"Gl");
       map53.put(9,"rG");
       map54.put(0,"uu");
       map54.put(1,"cD");
       map54.put(2,"vi");
       map54.put(3,"mL");
       map54.put(4,"FD");
       map54.put(5,"JN");
       map54.put(6,"Jp");
       map54.put(7,"Qq");
       map54.put(8,"KA");
       map54.put(9,"dR");
       map55.put(0,"Dx");
       map55.put(1,"RI");
       map55.put(2,"jH");
       map55.put(3,"sK");
       map55.put(4,"jY");
       map55.put(5,"HD");
       map55.put(6,"nW");
       map55.put(7,"xf");
       map55.put(8,"AG");
       map55.put(9,"Lm");
       map56.put(0,"eu");
       map56.put(1,"GI");
       map56.put(2,"Uu");
       map56.put(3,"ag");
       map56.put(4,"Jc");
       map56.put(5,"ff");
       map56.put(6,"bQ");
       map56.put(7,"tl");
       map56.put(8,"JV");
       map56.put(9,"Id");
       map57.put(0,"Jd");
       map57.put(1,"xZ");
       map57.put(2,"CE");
       map57.put(3,"Um");
       map57.put(4,"oX");
       map57.put(5,"HD");
       map57.put(6,"AF");
       map57.put(7,"OG");
       map57.put(8,"uv");
       map57.put(9,"KT");
       map58.put(0,"fe");
       map58.put(1,"AH");
       map58.put(2,"sj");
       map58.put(3,"Kc");
       map58.put(4,"Ax");
       map58.put(5,"wo");
       map58.put(6,"ri");
       map58.put(7,"yc");
       map58.put(8,"BK");
       map58.put(9,"uq");
       map59.put(0,"SS");
       map59.put(1,"wo");
       map59.put(2,"VH");
       map59.put(3,"Us");
       map59.put(4,"le");
       map59.put(5,"cg");
       map59.put(6,"lM");
       map59.put(7,"lL");
       map59.put(8,"UU");
       map59.put(9,"hN");
       map60.put(0,"Rr");
       map60.put(1,"Sq");
       map60.put(2,"zQ");
       map60.put(3,"ea");
       map60.put(4,"rn");
       map60.put(5,"rh");
       map60.put(6,"in");
       map60.put(7,"GQ");
       map60.put(8,"uY");
       map60.put(9,"CJ");
       map61.put(0,"EW");
       map61.put(1,"JW");
       map61.put(2,"tB");
       map61.put(3,"TJ");
       map61.put(4,"AA");
       map61.put(5,"nV");
       map61.put(6,"RQ");
       map61.put(7,"Rf");
       map61.put(8,"dm");
       map61.put(9,"mt");
       map62.put(0,"Wl");
       map62.put(1,"Gt");
       map62.put(2,"aB");
       map62.put(3,"wL");
       map62.put(4,"CA");
       map62.put(5,"Lh");
       map62.put(6,"bT");
       map62.put(7,"Qb");
       map62.put(8,"WE");
       map62.put(9,"UE");
       map63.put(0,"ad");
       map63.put(1,"JL");
       map63.put(2,"fI");
       map63.put(3,"Yy");
       map63.put(4,"fa");
       map63.put(5,"dx");
       map63.put(6,"nn");
       map63.put(7,"WI");
       map63.put(8,"Hs");
       map63.put(9,"fV");
       map64.put(0,"oL");
       map64.put(1,"kH");
       map64.put(2,"LU");
       map64.put(3,"Du");
       map64.put(4,"IQ");
       map64.put(5,"pW");
       map64.put(6,"Gr");
       map64.put(7,"RH");
       map64.put(8,"bR");
       map64.put(9,"Nk");
       map65.put(0,"kM");
       map65.put(1,"uK");
       map65.put(2,"oW");
       map65.put(3,"MA");
       map65.put(4,"bL");
       map65.put(5,"nH");
       map65.put(6,"rO");
       map65.put(7,"zu");
       map65.put(8,"kQ");
       map65.put(9,"cu");
       map66.put(0,"aJ");
       map66.put(1,"co");
       map66.put(2,"Jm");
       map66.put(3,"nF");
       map66.put(4,"IR");
       map66.put(5,"oY");
       map66.put(6,"rZ");
       map66.put(7,"VW");
       map66.put(8,"YZ");
       map66.put(9,"Uf");
       map67.put(0,"yw");
       map67.put(1,"fI");
       map67.put(2,"qf");
       map67.put(3,"LG");
       map67.put(4,"cL");
       map67.put(5,"wp");
       map67.put(6,"Ca");
       map67.put(7,"uz");
       map67.put(8,"Nm");
       map67.put(9,"xq");
       map68.put(0,"cW");
       map68.put(1,"mA");
       map68.put(2,"vh");
       map68.put(3,"Yj");
       map68.put(4,"co");
       map68.put(5,"YV");
       map68.put(6,"wd");
       map68.put(7,"gy");
       map68.put(8,"Sp");
       map68.put(9,"SJ");
       map69.put(0,"Gs");
       map69.put(1,"ei");
       map69.put(2,"qr");
       map69.put(3,"wQ");
       map69.put(4,"DH");
       map69.put(5,"vN");
       map69.put(6,"dQ");
       map69.put(7,"Xh");
       map69.put(8,"op");
       map69.put(9,"El");
       map70.put(0,"Lf");
       map70.put(1,"Aj");
       map70.put(2,"te");
       map70.put(3,"Bl");
       map70.put(4,"iA");
       map70.put(5,"sd");
       map70.put(6,"GX");
       map70.put(7,"oo");
       map70.put(8,"Zz");
       map70.put(9,"Eb");
       map71.put(0,"dd");
       map71.put(1,"ji");
       map71.put(2,"mW");
       map71.put(3,"OZ");
       map71.put(4,"mt");
       map71.put(5,"sC");
       map71.put(6,"uH");
       map71.put(7,"UK");
       map71.put(8,"ar");
       map71.put(9,"xq");
       map72.put(0,"ou");
       map72.put(1,"IQ");
       map72.put(2,"jT");
       map72.put(3,"ku");
       map72.put(4,"BN");
       map72.put(5,"UK");
       map72.put(6,"xT");
       map72.put(7,"Lc");
       map72.put(8,"DS");
       map72.put(9,"BG");
       map73.put(0,"mA");
       map73.put(1,"wx");
       map73.put(2,"qi");
       map73.put(3,"UE");
       map73.put(4,"il");
       map73.put(5,"TZ");
       map73.put(6,"CI");
       map73.put(7,"rh");
       map73.put(8,"LA");
       map73.put(9,"mz");
       map74.put(0,"we");
       map74.put(1,"VH");
       map74.put(2,"fj");
       map74.put(3,"HQ");
       map74.put(4,"oE");
       map74.put(5,"qF");
       map74.put(6,"JU");
       map74.put(7,"mH");
       map74.put(8,"Uu");
       map74.put(9,"uT");
       map75.put(0,"cV");
       map75.put(1,"Le");
       map75.put(2,"Lh");
       map75.put(3,"xW");
       map75.put(4,"oW");
       map75.put(5,"uY");
       map75.put(6,"Ue");
       map75.put(7,"aS");
       map75.put(8,"UB");
       map75.put(9,"CJ");
       map76.put(0,"vW");
       map76.put(1,"qE");
       map76.put(2,"ec");
       map76.put(3,"Ty");
       map76.put(4,"TD");
       map76.put(5,"Zb");
       map76.put(6,"ER");
       map76.put(7,"vz");
       map76.put(8,"hM");
       map76.put(9,"HF");
       map77.put(0,"nr");
       map77.put(1,"gu");
       map77.put(2,"FQ");
       map77.put(3,"Bc");
       map77.put(4,"Cg");
       map77.put(5,"sh");
       map77.put(6,"Iq");
       map77.put(7,"wJ");
       map77.put(8,"xY");
       map77.put(9,"zf");
       map78.put(0,"fC");
       map78.put(1,"yH");
       map78.put(2,"YZ");
       map78.put(3,"Et");
       map78.put(4,"mp");
       map78.put(5,"dW");
       map78.put(6,"iA");
       map78.put(7,"Ba");
       map78.put(8,"Gm");
       map78.put(9,"zx");
       map79.put(0,"pd");
       map79.put(1,"oK");
       map79.put(2,"Up");
       map79.put(3,"ph");
       map79.put(4,"an");
       map79.put(5,"Jt");
       map79.put(6,"kc");
       map79.put(7,"sz");
       map79.put(8,"JQ");
       map79.put(9,"WT");
       map80.put(0,"Bn");
       map80.put(1,"cz");
       map80.put(2,"Gz");
       map80.put(3,"vL");
       map80.put(4,"oM");
       map80.put(5,"bW");
       map80.put(6,"YF");
       map80.put(7,"Lo");
       map80.put(8,"cQ");
       map80.put(9,"is");
       map81.put(0,"vR");
       map81.put(1,"NS");
       map81.put(2,"SB");
       map81.put(3,"vz");
       map81.put(4,"IV");
       map81.put(5,"fo");
       map81.put(6,"IT");
       map81.put(7,"oI");
       map81.put(8,"qr");
       map81.put(9,"oA");
       map82.put(0,"QF");
       map82.put(1,"xZ");
       map82.put(2,"eK");
       map82.put(3,"rd");
       map82.put(4,"eh");
       map82.put(5,"ZM");
       map82.put(6,"DK");
       map82.put(7,"lu");
       map82.put(8,"QE");
       map82.put(9,"XF");
       map83.put(0,"wB");
       map83.put(1,"KL");
       map83.put(2,"vR");
       map83.put(3,"QM");
       map83.put(4,"Wd");
       map83.put(5,"Tf");
       map83.put(6,"uh");
       map83.put(7,"jD");
       map83.put(8,"Lp");
       map83.put(9,"or");
       map84.put(0,"Wb");
       map84.put(1,"Eq");
       map84.put(2,"RD");
       map84.put(3,"WV");
       map84.put(4,"mh");
       map84.put(5,"Jw");
       map84.put(6,"FC");
       map84.put(7,"mq");
       map84.put(8,"Yg");
       map84.put(9,"uA");
       map85.put(0,"BF");
       map85.put(1,"Yg");
       map85.put(2,"No");
       map85.put(3,"ee");
       map85.put(4,"NO");
       map85.put(5,"Iy");
       map85.put(6,"pI");
       map85.put(7,"GN");
       map85.put(8,"IK");
       map85.put(9,"wn");
       map86.put(0,"by");
       map86.put(1,"ss");
       map86.put(2,"le");
       map86.put(3,"Zg");
       map86.put(4,"Lq");
       map86.put(5,"pY");
       map86.put(6,"Ar");
       map86.put(7,"CW");
       map86.put(8,"mn");
       map86.put(9,"lq");
       map87.put(0,"cv");
       map87.put(1,"zs");
       map87.put(2,"rI");
       map87.put(3,"yo");
       map87.put(4,"QW");
       map87.put(5,"zo");
       map87.put(6,"gB");
       map87.put(7,"Eu");
       map87.put(8,"VV");
       map87.put(9,"lp");
       map88.put(0,"gT");
       map88.put(1,"Ms");
       map88.put(2,"vn");
       map88.put(3,"Fo");
       map88.put(4,"bo");
       map88.put(5,"cZ");
       map88.put(6,"FM");
       map88.put(7,"AV");
       map88.put(8,"HK");
       map88.put(9,"Aa");
       map89.put(0,"Rq");
       map89.put(1,"RN");
       map89.put(2,"Kd");
       map89.put(3,"HF");
       map89.put(4,"vh");
       map89.put(5,"Kq");
       map89.put(6,"Mb");
       map89.put(7,"KS");
       map89.put(8,"YJ");
       map89.put(9,"Mm");
       map90.put(0,"SW");
       map90.put(1,"jr");
       map90.put(2,"ME");
       map90.put(3,"ax");
       map90.put(4,"Qt");
       map90.put(5,"hV");
       map90.put(6,"ab");
       map90.put(7,"Aj");
       map90.put(8,"zv");
       map90.put(9,"Yw");
       map91.put(0,"fi");
       map91.put(1,"Rz");
       map91.put(2,"Ep");
       map91.put(3,"nH");
       map91.put(4,"oj");
       map91.put(5,"kg");
       map91.put(6,"rv");
       map91.put(7,"eR");
       map91.put(8,"SC");
       map91.put(9,"CF");
       map92.put(0,"sK");
       map92.put(1,"mb");
       map92.put(2,"aT");
       map92.put(3,"ou");
       map92.put(4,"yq");
       map92.put(5,"yK");
       map92.put(6,"GN");
       map92.put(7,"cd");
       map92.put(8,"Mp");
       map92.put(9,"od");
       map93.put(0,"YI");
       map93.put(1,"KI");
       map93.put(2,"RB");
       map93.put(3,"Uv");
       map93.put(4,"xs");
       map93.put(5,"Xm");
       map93.put(6,"av");
       map93.put(7,"uH");
       map93.put(8,"cv");
       map93.put(9,"Ey");
       map94.put(0,"eQ");
       map94.put(1,"zp");
       map94.put(2,"bl");
       map94.put(3,"fV");
       map94.put(4,"JU");
       map94.put(5,"Wt");
       map94.put(6,"xz");
       map94.put(7,"El");
       map94.put(8,"BQ");
       map94.put(9,"RD");
       map95.put(0,"ts");
       map95.put(1,"mz");
       map95.put(2,"ZF");
       map95.put(3,"qj");
       map95.put(4,"Sd");
       map95.put(5,"Fl");
       map95.put(6,"Mr");
       map95.put(7,"So");
       map95.put(8,"rH");
       map95.put(9,"AW");
       map96.put(0,"WD");
       map96.put(1,"tK");
       map96.put(2,"kQ");
       map96.put(3,"AW");
       map96.put(4,"sm");
       map96.put(5,"vE");
       map96.put(6,"iU");
       map96.put(7,"Ef");
       map96.put(8,"SX");
       map96.put(9,"BJ");
       map97.put(0,"yF");
       map97.put(1,"Fp");
       map97.put(2,"MZ");
       map97.put(3,"Sg");
       map97.put(4,"oS");
       map97.put(5,"BR");
       map97.put(6,"ay");
       map97.put(7,"Dw");
       map97.put(8,"mc");
       map97.put(9,"Du");
       map98.put(0,"Gn");
       map98.put(1,"Kn");
       map98.put(2,"vX");
       map98.put(3,"Nm");
       map98.put(4,"Rc");
       map98.put(5,"Vm");
       map98.put(6,"iS");
       map98.put(7,"Ni");
       map98.put(8,"Hs");
       map98.put(9,"Bg");
       map99.put(0,"FD");
       map99.put(1,"rJ");
       map99.put(2,"zE");
       map99.put(3,"Tq");
       map99.put(4,"iZ");
       map99.put(5,"MI");
       map99.put(6,"bG");
       map99.put(7,"bw");
       map99.put(8,"Oq");
       map99.put(9,"Rz");
       stock.put(0,map0);
       stock.put(1,map1);
       stock.put(2,map2);
       stock.put(3,map3);
       stock.put(4,map4);
       stock.put(5,map5);
       stock.put(6,map6);
       stock.put(7,map7);
       stock.put(8,map8);
       stock.put(9,map9);
       stock.put(10,map10);
       stock.put(11,map11);
       stock.put(12,map12);
       stock.put(13,map13);
       stock.put(14,map14);
       stock.put(15,map15);
       stock.put(16,map16);
       stock.put(17,map17);
       stock.put(18,map18);
       stock.put(19,map19);
       stock.put(20,map20);
       stock.put(21,map21);
       stock.put(22,map22);
       stock.put(23,map23);
       stock.put(24,map24);
       stock.put(25,map25);
       stock.put(26,map26);
       stock.put(27,map27);
       stock.put(28,map28);
       stock.put(29,map29);
       stock.put(30,map30);
       stock.put(31,map31);
       stock.put(32,map32);
       stock.put(33,map33);
       stock.put(34,map34);
       stock.put(35,map35);
       stock.put(36,map36);
       stock.put(37,map37);
       stock.put(38,map38);
       stock.put(39,map39);
       stock.put(40,map40);
       stock.put(41,map41);
       stock.put(42,map42);
       stock.put(43,map43);
       stock.put(44,map44);
       stock.put(45,map45);
       stock.put(46,map46);
       stock.put(47,map47);
       stock.put(48,map48);
       stock.put(49,map49);
       stock.put(50,map50);
       stock.put(51,map51);
       stock.put(52,map52);
       stock.put(53,map53);
       stock.put(54,map54);
       stock.put(55,map55);
       stock.put(56,map56);
       stock.put(57,map57);
       stock.put(58,map58);
       stock.put(59,map59);
       stock.put(60,map60);
       stock.put(61,map61);
       stock.put(62,map62);
       stock.put(63,map63);
       stock.put(64,map64);
       stock.put(65,map65);
       stock.put(66,map66);
       stock.put(67,map67);
       stock.put(68,map68);
       stock.put(69,map69);
       stock.put(70,map70);
       stock.put(71,map71);
       stock.put(72,map72);
       stock.put(73,map73);
       stock.put(74,map74);
       stock.put(75,map75);
       stock.put(76,map76);
       stock.put(77,map77);
       stock.put(78,map78);
       stock.put(79,map79);
       stock.put(80,map80);
       stock.put(81,map81);
       stock.put(82,map82);
       stock.put(83,map83);
       stock.put(84,map84);
       stock.put(85,map85);
       stock.put(86,map86);
       stock.put(87,map87);
       stock.put(88,map88);
       stock.put(89,map89);
       stock.put(90,map90);
       stock.put(91,map91);
       stock.put(92,map92);
       stock.put(93,map93);
       stock.put(94,map94);
       stock.put(95,map95);
       stock.put(96,map96);
       stock.put(97,map97);
       stock.put(98,map98);
       stock.put(99,map99);

    }





}
